# This is a LIAM2 simulation file. Before you run it (see below) please note
# that when a chart window is open, the simulation is paused. In other words,
# you need to close the chart window to resume the simulation !

# This example introduces (mostly) reporting related features. We build upon
# the model defined in the first demonstration model and introduce the
# following built-in functions: if, trunc, csv, dump, show, groupby and bar.

# To run the simulation, press F6 if you are using the editor bundled with
# LIAM2, otherwise run the following command in a console:
# [BUNDLEPATH]\liam2\main run demo02.yml
entities:
    person:
        fields:
            # period and id are implicit
            - age:    int
            - gender: bool

            # fields which are not present in the input dataset need to be
            # declared with "initialdata: False"
            - agegroup: {type: int, initialdata: False}

        processes:
            ageing():
                - age: age + 1

                # Now we want to compute the 'agegroup' variable.
                # The 'if' function produces one of two different results
                # depending on the value of a condition. It has the following
                # signature:
                # if(condition_expression, expression_if_true, expression_if_false)
                # The 'trunc' function converts a floating point value to an
                # integer by dropping the decimal part.
                - agegroup: if(age < 50,
                               5 * trunc(age / 5),
                               10 * trunc(age / 10))

            # The "dump_info" function will produces 2 csv files (one per
            # period): "person_2002.csv" and "person_2003.csv". It does so by
            # combining the 'csv' and 'dump' functions. The 'dump' function
            # creates an (in-memory) table with all the columns (or expressions)
            # in its arguments. The 'csv' function can write any value
            # (including tables) to a .csv file.
            dump_info():
                - csv(dump(id, age, gender))

            # The "show_demography" function will, for each period, display in
            # the simulation log how many persons there are per agegroup and
            # gender. It does so by combining the 'show' and 'groupby'
            # functions. 'groupby' is a versatile function (see the
            # documentation for details). In its simplest form, like in the
            # examples below, it groups individuals by their value for the
            # given columns, computes how many individuals there are in each
            # group and creates an in-memory table out of that. The 'show'
            # function can write any value (including tables) to the
            # simulation log.
            show_demography():
                - show(groupby(agegroup, gender))

            # Finally, in the "chart_demography" function, we reuse the same
            # groupby expression but this time display it as a bar chart. LIAM2
            # also supports plots, stacked plots, scatter plots, box plots and
            # pie charts. See the user guide for details on how to use those.

            # Note that, by default, the simulation is paused while the chart
            # window is open. So you need to **close the window** to continue
            # the simulation !
            chart_demography():
                - bar(groupby(agegroup, gender))

simulation:
    processes:
        - person: [ageing, dump_info, show_demography, chart_demography]

    input:
        file: demo.h5
    output:
        path: output
        file: simulation.h5

    # first simulated period
    start_period: 2016
    periods: 2
